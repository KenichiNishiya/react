{"ast":null,"code":"var _jsxFileName = \"/home/yori/us/react/test/src/App.js\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet sudo = true;\nlet isRuby = true;\nconst distros = [\"Ubuntu\", \"Debian\", \"Arch\", \"Fedora\", \"popOS\"];\nfunction App() {\n  const users = [{\n    name: \"Linus\",\n    age: 40\n  }, {\n    name: \"Stallman\",\n    age: 51\n  }, {\n    name: \"Satya\",\n    age: 90\n  }];\n  const planets = [{\n    name: \"Mars\",\n    isGasPlanet: false\n  }, {\n    name: \"Earth\",\n    isGasPlanet: false\n  }, {\n    name: \"Jupiter\",\n    isGasPlanet: true\n  }, {\n    name: \"Venus\",\n    isGasPlanet: false\n  }, {\n    name: \"Neptune\",\n    isGasPlanet: true\n  }, {\n    name: \"Uranus\",\n    isGasPlanet: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [planets.map((planet, key) => {\n      return props.isGasPlanet && /*#__PURE__*/_jsxDEV(Planets, {\n        name: planet.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 39\n      }, this);\n    }), sudo === true ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome root\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 48\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"aqua\"\n      },\n      children: \"Colored text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: isRuby ? \"red\" : \"aqua\"\n      },\n      children: \"Colored text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isRuby ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        isRuby = false;\n      },\n      children: \"Change to aqua\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        isRuby = true;\n      },\n      children: \"Change to ruby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 82\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this), isRuby && /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Rubbuton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }, this), distros.map((distro, key) => {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: distro\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this);\n    }), users.map((user, key) => {\n      return /*#__PURE__*/_jsxDEV(User, {\n        name: user.name,\n        age: user.age\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this);\n\n      // return <div>{user.name} {user.age}</div>\n    }), /*#__PURE__*/_jsxDEV(Employee, {\n      name: \"Tux\",\n      age: 12,\n      email: \"tux@tux.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Job, {\n      salary: 30000,\n      position: \"Developer\",\n      company: \"Linux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n// The following is a representation of props if it was a simple js object\n// const props = {\n//     name: \"Tux\",\n//     Age: 12,\n//     email: \"tux@tux.com\"\n// }\n_c = App;\nconst User = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.name, \" \", props.age]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_c2 = User;\nconst Employee = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"name\",\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_c3 = Employee;\nconst Job = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.salary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.company\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_c4 = Job;\nconst Planets = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 12\n  }, this);\n};\n_c5 = Planets;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"User\");\n$RefreshReg$(_c3, \"Employee\");\n$RefreshReg$(_c4, \"Job\");\n$RefreshReg$(_c5, \"Planets\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","sudo","isRuby","distros","App","users","name","age","planets","isGasPlanet","className","children","map","planet","key","props","Planets","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","distro","user","User","Employee","email","Job","salary","position","company","_c","_c2","_c3","_c4","_c5","$RefreshReg$"],"sources":["/home/yori/us/react/test/src/App.js"],"sourcesContent":["import './App.css';\nlet sudo = true\nlet isRuby = true\nconst distros = [\"Ubuntu\", \"Debian\", \"Arch\", \"Fedora\", \"popOS\"]\n\nfunction App() {\n    const users = [\n        {name: \"Linus\", age: 40},\n        {name: \"Stallman\", age: 51},\n        {name: \"Satya\", age: 90}\n    ];\n\n\n    const planets =[\n        {name: \"Mars\", isGasPlanet: false},\n        {name: \"Earth\", isGasPlanet: false},\n        {name: \"Jupiter\", isGasPlanet: true},\n        {name: \"Venus\", isGasPlanet: false},\n        {name: \"Neptune\", isGasPlanet: true},\n        {name: \"Uranus\", isGasPlanet: true}\n    ]\n\n  return (\n    <div className=\"App\">\n\n      {planets.map((planet,key) => {\n          return props.isGasPlanet && <Planets name={planet.name}/>\n      })}\n\n      {/*Ternary operation, if root then 1st statement, else 2nd statement*/}\n      {sudo === true ? <h1>Welcome root</h1> : <h1>Welcome user</h1>}\n      <h1 style={{color: \"aqua\"}}>Colored text</h1>\n      <h1 style={{color: isRuby ? \"red\" : \"aqua\"}}>Colored text</h1>\n\n      {isRuby ? <button onClick={() => {isRuby=false}}>Change to aqua</button> : <button onClick={() => {isRuby=true}}>Change to ruby</button>}\n\n      <br/><br/>\n\n      {/*Ternary operation without any else you use only &&*/}\n      {isRuby && <button>Rubbuton</button>}\n\n      {/*List uses the map function on an array, key is not used but wants to be passed*/}\n      {distros.map((distro,key) => {\n          return <h1 key={key}>{distro}</h1>\n      })}\n\n      {users.map((user,key) => {\n          return <User name={user.name} age={user.age}/>\n          \n          // return <div>{user.name} {user.age}</div>\n      })}\n\n      {/*Components use these attributes as props*/}\n      <Employee name=\"Tux\" age={12} email=\"tux@tux.com\"/>\n      <Job salary={30000} position=\"Developer\" company=\"Linux\"/>\n\n    </div>\n  );\n}\n\n// The following is a representation of props if it was a simple js object\n// const props = {\n//     name: \"Tux\",\n//     Age: 12,\n//     email: \"tux@tux.com\"\n// }\nconst User = (props) =>{\n    return(\n        <div>\n            {props.name} {props.age}\n        </div>\n    );\n};\n\nconst Employee = (props) =>{\n    return(\n        <div>\n            <h1 className=\"name\">{props.name}</h1>\n            <h1>{props.age}</h1>\n            <h1>{props.email}</h1>\n        </div>\n    );\n};\n\nconst Job = (props) => {\n    return(\n        <div>\n            <p>{props.salary}</p>\n            <p>{props.position}</p>\n            <p>{props.company}</p>\n        </div>\n    );\n};\n\nconst Planets = (props) =>{\n    return <p>{props.name}</p>\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}