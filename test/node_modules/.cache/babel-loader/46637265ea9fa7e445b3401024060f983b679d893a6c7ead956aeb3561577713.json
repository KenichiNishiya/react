{"ast":null,"code":"var _jsxFileName = \"/home/yori/us/react/test/src/App.js\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet sudo = true;\nlet isRuby = true;\nfunction App() {\n  const distros = [{\n    name: \"Ubuntu\",\n    company: \"Canonical\"\n  }, {\n    name: \"Fedora\",\n    company: \"RedHat\"\n  }, {\n    name: \"openSUSE\",\n    company: \"SUSE\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [sudo === true ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome root\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 48\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"aqua\"\n      },\n      children: \"Colored text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: isRuby ? \"red\" : \"aqua\"\n      },\n      children: \"Colored text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), isRuby ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        isRuby = false;\n      },\n      children: \"Change to aqua\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        isRuby = true;\n      },\n      children: \"Change to ruby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 82\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this), isRuby && /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Rubbuton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 18\n    }, this), distros.map((distro, key) => {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: distro\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(User, {\n      name: \"Tux\",\n      age: 12,\n      email: \"tux@tux.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Job, {\n      salary: 30000,\n      position: \"Developer\",\n      company: \"Linux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n// The following is a representation of props if it was a simple js object\n// const props = {\n//     name: \"Tux\",\n//     Age: 12,\n//     email: \"tux@tux.com\"\n// }\n_c = App;\nconst User = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"name\",\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_c2 = User;\nconst Job = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.salary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.company\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_c3 = Job;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"User\");\n$RefreshReg$(_c3, \"Job\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","sudo","isRuby","App","distros","name","company","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","map","distro","key","User","age","email","Job","salary","position","_c","props","_c2","_c3","$RefreshReg$"],"sources":["/home/yori/us/react/test/src/App.js"],"sourcesContent":["import './App.css';\nlet sudo = true\nlet isRuby = true\n\nfunction App() {\nconst distros = [\n    {name: \"Ubuntu\", company: \"Canonical\"},\n    {name: \"Fedora\", company: \"RedHat\"},\n    {name: \"openSUSE\", company: \"SUSE\"}\n];\n  return (\n    <div className=\"App\">\n\n      {/*Ternary operation, if root then 1st statement, else 2nd statement*/}\n      {sudo === true ? <h1>Welcome root</h1> : <h1>Welcome user</h1>}\n      <h1 style={{color: \"aqua\"}}>Colored text</h1>\n      <h1 style={{color: isRuby ? \"red\" : \"aqua\"}}>Colored text</h1>\n\n      {isRuby ? <button onClick={() => {isRuby=false}}>Change to aqua</button> : <button onClick={() => {isRuby=true}}>Change to ruby</button>}\n\n      <br/><br/>\n\n      {/*Ternary operation without any else you use only &&*/}\n      {isRuby && <button>Rubbuton</button>}\n\n      {/*List uses the map function on an array, key is not used but needed to be passed*/}\n      {distros.map((distro,key) => {\n          return <h1 key={key}>{distro}</h1>\n      })}\n\n      {/*Components use these attributes as props*/}\n      <User name=\"Tux\" age={12} email=\"tux@tux.com\"/>\n      <Job salary={30000} position=\"Developer\" company=\"Linux\"/>\n\n    </div>\n  );\n}\n\n// The following is a representation of props if it was a simple js object\n// const props = {\n//     name: \"Tux\",\n//     Age: 12,\n//     email: \"tux@tux.com\"\n// }\n\nconst User = (props) =>{\n    return(\n        <div>\n            <h1 className=\"name\">{props.name}</h1>\n            <h1>{props.age}</h1>\n            <h1>{props.email}</h1>\n        </div>\n    );\n};\n\nconst Job = (props) => {\n    return(\n        <div>\n            <p>{props.salary}</p>\n            <p>{props.position}</p>\n            <p>{props.company}</p>\n        </div>\n    );\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}