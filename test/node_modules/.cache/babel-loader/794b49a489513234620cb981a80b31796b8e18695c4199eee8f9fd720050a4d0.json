{"ast":null,"code":"var _jsxFileName = \"/home/yori/us/react/test/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\nimport { User } from './User.js';\nimport { Employee } from './Employee.js';\nimport { Planets } from './Planets.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet sudo = true;\n// let isRuby = true\nconst distros = [\"Ubuntu\", \"Debian\", \"Arch\", \"Fedora\", \"popOS\"];\nfunction App() {\n  _s();\n  {/*Varialbe age, create setAge function to alter it, set it to 0 initially*/}\n  const [age, setAge] = useState(0);\n  const increaseAge = () => {\n    setAge(age + 1);\n  };\n  const [isRuby, setRuby] = useState(true);\n  const users = [{\n    name: \"Linus\",\n    age: 40\n  }, {\n    name: \"Stallman\",\n    age: 51\n  }, {\n    name: \"Satya\",\n    age: 90\n  }];\n  const planets = [{\n    name: \"Mars\",\n    isGasPlanet: false\n  }, {\n    name: \"Earth\",\n    isGasPlanet: false\n  }, {\n    name: \"Jupiter\",\n    isGasPlanet: true\n  }, {\n    name: \"Venus\",\n    isGasPlanet: false\n  }, {\n    name: \"Neptune\",\n    isGasPlanet: true\n  }, {\n    name: \"Uranus\",\n    isGasPlanet: true\n  }];\n  const changeToAqua = () => {\n    setRuby(false);\n  };\n  const changeToRuby = () => {\n    setRuby(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Age: \", age]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increaseAge,\n      children: \"Increase age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), planets.map((planet, key) => {\n      // return planet.isGasPlanet && <p>{planet.name}</p> \n      return /*#__PURE__*/_jsxDEV(Planets, {\n        name: planet.isGasPlanet && planet.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this);\n    }), sudo === true ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome root\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 48\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"aqua\"\n      },\n      children: \"Colored text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: isRuby ? \"red\" : \"aqua\"\n      },\n      children: \"Colored text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), isRuby ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeToAqua,\n      children: \"Change to aqua\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeToRuby,\n      children: \"Change to ruby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 74\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this), isRuby && /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Rubbuton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 18\n    }, this), distros.map((distro, key) => {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: distro\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 18\n      }, this);\n    }), users.map((user, key) => {\n      return /*#__PURE__*/_jsxDEV(User, {\n        name: user.name,\n        age: user.age\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 18\n      }, this);\n      // return <div>{user.name} {user.age}</div>\n    }), /*#__PURE__*/_jsxDEV(Employee, {\n      name: \"Tux\",\n      age: 12,\n      email: \"tux@tux.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Job, {\n      salary: 30000,\n      position: \"Developer\",\n      company: \"Linux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n// The following is a representation of props if it was a simple js object\n// const props = {\n//     name: \"Tux\",\n//     Age: 12,\n//     email: \"tux@tux.com\"\n// }\n_s(App, \"hBj7W9YvwHa+VFfgRvHulVW6htc=\");\n_c = App;\nconst Job = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.salary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.company\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Job;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Job\");","map":{"version":3,"names":["useState","User","Employee","Planets","jsxDEV","_jsxDEV","sudo","distros","App","_s","age","setAge","increaseAge","isRuby","setRuby","users","name","planets","isGasPlanet","changeToAqua","changeToRuby","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","planet","key","style","color","distro","user","email","Job","salary","position","company","_c","props","_c2","$RefreshReg$"],"sources":["/home/yori/us/react/test/src/App.js"],"sourcesContent":["import './App.css';\nimport {useState} from 'react';\nimport {User} from './User.js';\nimport {Employee} from './Employee.js';\nimport {Planets} from './Planets.js';\n\nlet sudo = true\n// let isRuby = true\nconst distros = [\"Ubuntu\", \"Debian\", \"Arch\", \"Fedora\", \"popOS\"]\n\nfunction App() {\n    {/*Varialbe age, create setAge function to alter it, set it to 0 initially*/}\n    const [age,setAge] = useState(0);\n\n    const increaseAge = () =>{\n        setAge(age+1);\n    }\n\n    const [isRuby, setRuby] = useState(true);\n\n    const users = [\n        {name: \"Linus\", age: 40},\n        {name: \"Stallman\", age: 51},\n        {name: \"Satya\", age: 90}\n    ];\n\n\n    const planets =[\n        {name: \"Mars\", isGasPlanet: false},\n        {name: \"Earth\", isGasPlanet: false},\n        {name: \"Jupiter\", isGasPlanet: true},\n        {name: \"Venus\", isGasPlanet: false},\n        {name: \"Neptune\", isGasPlanet: true},\n        {name: \"Uranus\", isGasPlanet: true}\n    ]\n\n      const changeToAqua = () =>{\n          setRuby(false);\n      }\n\n      const changeToRuby = () =>{\n          setRuby(true);\n      }\n\n\n  return (\n    <div className=\"App\">\n\n      <h1>Age: {age}</h1>\n      <button onClick={increaseAge}>Increase age</button>\n\n      {planets.map((planet,key) => {\n           // return planet.isGasPlanet && <p>{planet.name}</p> \n           return <Planets name={planet.isGasPlanet && planet.name}/>\n      })}\n\n      {/*Ternary operation, if root then 1st statement, else 2nd statement*/}\n      {sudo === true ? <h1>Welcome root</h1> : <h1>Welcome user</h1>}\n      <h1 style={{color: \"aqua\"}}>Colored text</h1>\n      <h1 style={{color: isRuby ? \"red\" : \"aqua\"}}>Colored text</h1>\n\n      {isRuby ? <button onClick={changeToAqua}>Change to aqua</button> : <button onClick={changeToRuby}>Change to ruby</button>}\n\n      <br/><br/>\n\n      {/*Ternary operation without any else you use only &&*/}\n      {isRuby && <button>Rubbuton</button>}\n\n      {/*List uses the map function on an array, key is not used but wants to be passed*/}\n      {distros.map((distro,key) => {\n          return <h1 key={key}>{distro}</h1>\n      })}\n\n      {users.map((user,key) => {\n          return <User name={user.name} age={user.age}/>\n          // return <div>{user.name} {user.age}</div>\n      })}\n\n      {/*Components use these attributes as props*/}\n      <Employee name=\"Tux\" age={12} email=\"tux@tux.com\"/>\n      <Job salary={30000} position=\"Developer\" company=\"Linux\"/>\n\n    </div>\n  );\n}\n\n// The following is a representation of props if it was a simple js object\n// const props = {\n//     name: \"Tux\",\n//     Age: 12,\n//     email: \"tux@tux.com\"\n// }\n\n\nconst Job = (props) => {\n    return(\n        <div>\n            <p>{props.salary}</p>\n            <p>{props.position}</p>\n            <p>{props.company}</p>\n        </div>\n    );\n};\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}