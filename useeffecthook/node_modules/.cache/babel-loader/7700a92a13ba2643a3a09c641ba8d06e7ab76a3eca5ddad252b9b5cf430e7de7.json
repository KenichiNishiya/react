{"ast":null,"code":"var _jsxFileName = \"/home/yori/us/react/useeffecthook/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { Text } from './Text.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showText, setShowText] = useState(false);\n  const [text, setText] = useState(\"\");\n  const toggleText = () => {\n    setShowText(!showText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Effect hook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleText,\n      children: \" Show text \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), showText && /*#__PURE__*/_jsxDEV(Text, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ptiX1IILosHzPxZmSLLVkzntJ8A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Text","jsxDEV","_jsxDEV","App","_s","showText","setShowText","text","setText","toggleText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/yori/us/react/useeffecthook/src/App.js"],"sourcesContent":["import './App.css';\nimport {useState, useEffect} from 'react';\nimport {Text} from './Text.js'\n\nfunction App() {\n    const [showText,setShowText] = useState(false);\n    const [text,setText] = useState(\"\");\n    const toggleText = () =>{\n        setShowText(!showText);\n    }\n\n\n  return (\n    <div className=\"App\">\n      <h1>Effect hook</h1>\n      <button onClick={toggleText}> Show text </button>\n      <br/>\n      {showText && <Text/>}\n      <br/>\n      {text}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,SAAQC,IAAI,QAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC9C,MAAM,CAACS,IAAI,EAACC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAMW,UAAU,GAAGA,CAAA,KAAK;IACpBH,WAAW,CAAC,CAACD,QAAQ,CAAC;EAC1B,CAAC;EAGH,oBACEH,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBT,OAAA;MAAAS,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBb,OAAA;MAAQc,OAAO,EAAEP,UAAW;MAAAE,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDb,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACJV,QAAQ,iBAAIH,OAAA,CAACF,IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACpBb,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACJR,IAAI;EAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACX,EAAA,CAlBQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAoBZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}