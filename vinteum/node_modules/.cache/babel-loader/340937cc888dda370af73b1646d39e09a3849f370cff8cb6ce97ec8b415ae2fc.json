{"ast":null,"code":"var _jsxFileName = \"/home/yori/us/react/vinteum/src/App.js\",\n  _s = $RefreshSig$();\n//TODO \n// resolver soma\n// colocar as cartas em arrays\n// botao de pegar nova carta\n// botao de finalizar a partida\n// usar emJogo e tem21\n\n// TODO OPTIONAL\n// sistema de apostas\n// dealer pode pegar nova carta\n// cartas representam as letras quando pertinente\n\nimport './App.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [emJogo, setEmJogo] = useState(false);\n\n  // const [primeiraCarta,setPrimeiraCarta] = useState(0);\n  // const [segundaCarta,setSegundaCarta] = useState(0);\n  // const [somaCartas,setSomaCartas] = useState(0);\n  const [cartas, setCartas] = useState([]);\n\n  // const [primeiraCartaDealer,setPrimeiraCartaDealer] = useState(0);\n  // const [segundaCartaDealer,setSegundaCartaDealer] = useState(0);\n  // const [somaCartasDealer,setSomaCartasDealer] = useState(0);\n  const [cartasDealer, setCartasDealer] = useState([]);\n  const [resultado, setResultado] = useState(\"\");\n  useEffect(() => {\n    console.log(\"CHANGED\");\n    console.log(\"Suas cartas hook\", cartas);\n    console.log(\"Resultado\", resultado);\n    setCartas(cartas);\n    setCartasDealer(cartasDealer);\n    setResultado(resultado);\n  }, [cartas, cartasDealer, resultado]);\n  const iniciarPartida = () => {\n    setCartas([randomCard(), randomCard()]);\n    setCartasDealer([randomCard(), randomCard()]);\n    // setPrimeiraCarta(randomCard());\n    // setSegundaCarta(randomCard());\n    // console.log(\"cartas:\",cartas)\n\n    // setPrimeiraCartaDealer(randomCard());\n    // setSegundaCartaDealer(randomCard());\n\n    setEmJogo(true);\n    setResultado(\"\");\n    // somarCartas();\n  };\n\n  const finalizar = () => {\n    // somarCartas();\n    // console.log(\"finalizar function\",somaCartas,somaCartasDealer)\n    compararSomas();\n  };\n  const pegarCarta = () => {\n    let novaCarta = randomCard();\n    console.log(\"novaCarta:\", novaCarta);\n    let novaArray = [...cartas, novaCarta];\n    setCartas(novaArray);\n    console.log(\"novaArray:\", novaArray);\n    let somaArray = 0;\n    for (let i = 0; i < cartas.length; i++) {\n      somaArray += cartas[i];\n    }\n    console.log(\"AASDDSA\", somaArray);\n    if (somaArray > 21) {\n      setResultado(\"Perdeu\");\n    }\n  };\n  const compararSomas = () => {\n    // As somas ficam = 0\n    let somaArray = 0;\n    let somaArrayDealer = 0;\n    for (let i = 0; i < cartas.length; i++) {\n      somaArray += cartas[i];\n    }\n    for (let i = 0; i < cartasDealer.length; i++) {\n      somaArrayDealer += cartasDealer[i];\n    }\n    console.log(\"novo soma array dealer\", somaArrayDealer);\n    // let soma=primeiraCarta+segundaCarta;\n    // let somaDealer=primeiraCartaDealer+segundaCartaDealer;\n\n    if (somaArray < 21) {\n      if (somaArray >= somaArrayDealer) {\n        setResultado(\"Ganhou\");\n      } else {\n        setResultado(\"Perdeu\");\n      }\n    } else if (somaArray === 21) {\n      setResultado(\"VINTE UM\");\n    } else {\n      setResultado(\"Perdeu, ultrapassou 21\");\n    }\n    console.log(\"Comparar\");\n  };\n\n  // const somarCartas = () =>{\n  // soma nao recebe valor\n  // somente depois de apertar 2 vezes ele pega o valor\n  // mas e o valor anterior\n  // setSomaCartas(primeiraCarta+segundaCarta);\n  // setSomaCartasDealer(primeiraCartaDealer+segundaCartaDealer);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [emJogo && console.log(\"em jogo\"), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: iniciarPartida,\n      children: \"Iniciar jogo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: finalizar,\n      children: \"Finalizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: pegarCarta,\n      children: \"Pegar mais uma carta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartasJogador, {\n      cartas: cartas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartasDealer, {\n      primeira: cartasDealer[0],\n      segunda: cartasDealer[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), resultado !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: resultado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3he6aNv0Cht5pN5wdx4ZLLHz06Q=\");\n_c = App;\nconst CartasJogador = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Suas Cartas: \", props.cartas.join(\" \")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n};\n_c2 = CartasJogador;\nconst CartasDealer = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cartas do dealer: \", props.primeira, \" \", props.segunda]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n_c3 = CartasDealer;\nfunction randomCard() {\n  let random = Math.floor(Math.random() * 13) + 1;\n  if (random > 10) {\n    return 10;\n  } else if (random === 1) {\n    return 11;\n  } else {\n    return random;\n  }\n}\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"CartasJogador\");\n$RefreshReg$(_c3, \"CartasDealer\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","emJogo","setEmJogo","cartas","setCartas","cartasDealer","setCartasDealer","resultado","setResultado","console","log","iniciarPartida","randomCard","finalizar","compararSomas","pegarCarta","novaCarta","novaArray","somaArray","i","length","somaArrayDealer","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","CartasJogador","CartasDealer","primeira","segunda","_c","props","join","_c2","_c3","random","Math","floor","$RefreshReg$"],"sources":["/home/yori/us/react/vinteum/src/App.js"],"sourcesContent":["//TODO \n// resolver soma\n// colocar as cartas em arrays\n// botao de pegar nova carta\n// botao de finalizar a partida\n// usar emJogo e tem21\n\n// TODO OPTIONAL\n// sistema de apostas\n// dealer pode pegar nova carta\n// cartas representam as letras quando pertinente\n\nimport './App.css';\nimport {useState} from 'react';\nimport {useEffect} from 'react';\n\nfunction App() {\nconst [emJogo,setEmJogo] = useState(false);\n\n// const [primeiraCarta,setPrimeiraCarta] = useState(0);\n// const [segundaCarta,setSegundaCarta] = useState(0);\n// const [somaCartas,setSomaCartas] = useState(0);\nconst [cartas,setCartas] = useState([]);\n\n// const [primeiraCartaDealer,setPrimeiraCartaDealer] = useState(0);\n// const [segundaCartaDealer,setSegundaCartaDealer] = useState(0);\n// const [somaCartasDealer,setSomaCartasDealer] = useState(0);\nconst [cartasDealer,setCartasDealer] = useState([]);\n\nconst [resultado,setResultado] = useState(\"\");\n\n    useEffect(() =>{\n        console.log(\"CHANGED\")\n        console.log(\"Suas cartas hook\",cartas)\n        console.log(\"Resultado\",resultado)\n        setCartas(cartas);\n        setCartasDealer(cartasDealer);\n        setResultado(resultado);\n    },[cartas,cartasDealer,resultado]);\n\n    const iniciarPartida = () =>{\n        setCartas([randomCard(),randomCard()])\n        setCartasDealer([randomCard(),randomCard()])\n        // setPrimeiraCarta(randomCard());\n        // setSegundaCarta(randomCard());\n        // console.log(\"cartas:\",cartas)\n        \n        // setPrimeiraCartaDealer(randomCard());\n        // setSegundaCartaDealer(randomCard());\n\n        setEmJogo(true);\n        setResultado(\"\");\n        // somarCartas();\n    }\n\n    const finalizar = () =>{\n        // somarCartas();\n        // console.log(\"finalizar function\",somaCartas,somaCartasDealer)\n        compararSomas();\n    }\n\n\n    const pegarCarta = () =>{\n        let novaCarta = randomCard();\n        console.log(\"novaCarta:\",novaCarta)\n        let novaArray = [...cartas,novaCarta];\n        setCartas(novaArray);\n        console.log(\"novaArray:\",novaArray)\n\n        let somaArray = 0\n        for(let i=0;i<cartas.length;i++){\n            somaArray += cartas[i];\n        }\n        console.log(\"AASDDSA\",somaArray)\n\n        if(somaArray > 21){\n            setResultado(\"Perdeu\");\n        }\n    }\n\n    const compararSomas = () =>{\n        // As somas ficam = 0\n        let somaArray = 0\n        let somaArrayDealer = 0\n        for(let i=0;i<cartas.length;i++){\n            somaArray += cartas[i];\n\n        }\n\n        for(let i=0;i<cartasDealer.length;i++){\n            somaArrayDealer += cartasDealer[i];\n        }\n        console.log(\"novo soma array dealer\",somaArrayDealer)\n        // let soma=primeiraCarta+segundaCarta;\n        // let somaDealer=primeiraCartaDealer+segundaCartaDealer;\n\n        if(somaArray < 21){\n            if(somaArray>=somaArrayDealer){\n                setResultado(\"Ganhou\")\n            }\n            else{\n                setResultado(\"Perdeu\")\n            }\n        }\n        else if(somaArray === 21){\n            setResultado(\"VINTE UM\")\n        }\n        else{\n            setResultado(\"Perdeu, ultrapassou 21\")\n        }\n        console.log(\"Comparar\")\n    }\n\n    // const somarCartas = () =>{\n        // soma nao recebe valor\n        // somente depois de apertar 2 vezes ele pega o valor\n        // mas e o valor anterior\n        // setSomaCartas(primeiraCarta+segundaCarta);\n        // setSomaCartasDealer(primeiraCartaDealer+segundaCartaDealer);\n    // }\n\n  return (\n    <div className=\"App\">\n      {emJogo && console.log(\"em jogo\")}\n      <button onClick={iniciarPartida}>Iniciar jogo</button>\n      <button onClick={finalizar}>Finalizar</button>\n      <button onClick={pegarCarta}>Pegar mais uma carta</button>\n      <br/>\n      <CartasJogador cartas={cartas}/>\n      <br/>\n      <CartasDealer primeira={cartasDealer[0]} segunda={cartasDealer[1]} />\n      <br/>\n      {resultado !== \"\" && <p>{resultado}</p>}\n    </div>\n  );\n\n}\n\nconst CartasJogador = (props) => {\n    return(\n        <div>\n        <p>Suas Cartas: {props.cartas.join(\" \")}</p>\n        </div>\n    );\n};\n\nconst CartasDealer = (props) => {\n    return(\n        <div>\n        <p>Cartas do dealer: {props.primeira} {props.segunda}</p>\n        </div>\n    );\n};\n\nfunction randomCard(){\n    let random = Math.floor(Math.random() * 13) + 1\n    if (random > 10){\n        return 10\n    }\n\n    else if (random === 1){\n        return 11\n    }\n\n    else {\n        return random \n    }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}