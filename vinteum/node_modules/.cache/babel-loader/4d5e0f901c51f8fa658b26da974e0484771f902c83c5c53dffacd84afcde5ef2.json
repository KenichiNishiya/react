{"ast":null,"code":"var _jsxFileName = \"/home/yori/us/react/vinteum/src/App.js\",\n  _s = $RefreshSig$();\n//TODO \n// resolver soma\n// colocar as cartas em arrays\n// botao de pegar nova carta\n// botao de finalizar a partida\n// usar emJogo e tem21\n\n// TODO OPTIONAL\n// sistema de apostas\n// dealer pode pegar nova carta\n// cartas representam as letras quando pertinente\n\nimport './App.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [emJogo, setEmJogo] = useState(false);\n\n  // const [primeiraCarta,setPrimeiraCarta] = useState(0);\n  // const [segundaCarta,setSegundaCarta] = useState(0);\n  // const [somaCartas,setSomaCartas] = useState(0);\n  const [cartas, setCartas] = useState([randomCard(), randomCard()]);\n\n  // const [primeiraCartaDealer,setPrimeiraCartaDealer] = useState(0);\n  // const [segundaCartaDealer,setSegundaCartaDealer] = useState(0);\n  // const [somaCartasDealer,setSomaCartasDealer] = useState(0);\n  const [cartasDealer, setCartasDealer] = useState([randomCard(), randomCard()]);\n  const [resultado, setResultado] = useState(\"\");\n\n  // useEffect(() =>{\n  //     console.log(\"soma\",somaCartas);\n  //     console.log(\"dealer\",somaCartasDealer);\n  // },[somaCartas,somaCartasDealer]);\n\n  const iniciarPartida = () => {\n    // setPrimeiraCarta(randomCard());\n    // setSegundaCarta(randomCard());\n    // console.log(\"cartas:\",cartas)\n\n    // setPrimeiraCartaDealer(randomCard());\n    // setSegundaCartaDealer(randomCard());\n\n    setEmJogo(true);\n    // somarCartas();\n  };\n\n  const finalizar = () => {\n    // somarCartas();\n    // console.log(\"finalizar function\",somaCartas,somaCartasDealer)\n    compararSomas();\n  };\n  const pegarCarta = () => {\n    let novaCarta = randomCard();\n    console.log(\"novaCarta:\", novaCarta);\n    let novaArray = [...cartas, novaCarta];\n    setCartas(novaArray);\n    console.log(\"novaArray:\", novaArray);\n    compararSomas();\n  };\n  const compararSomas = () => {\n    // As somas ficam = 0\n    let somaArray = 0;\n    let somaArrayDealer = 0;\n    for (let i = 0; i < cartas.length; i++) {\n      somaArray += cartas[i];\n    }\n    console.log(\"novo soma array:\", somaArray);\n    for (let i = 0; i < cartasDealer.length; i++) {\n      somaArrayDealer += cartasDealer[i];\n    }\n    console.log(\"novo soma array dealer\", somaArrayDealer);\n    // let soma=primeiraCarta+segundaCarta;\n    // let somaDealer=primeiraCartaDealer+segundaCartaDealer;\n\n    if (somaArray < somaArrayDealer) {\n      setResultado(\"Perdeu\");\n    } else {\n      setResultado(\"Ganhou\");\n    }\n    console.log(\"Comparar\");\n  };\n\n  // const somarCartas = () =>{\n  // soma nao recebe valor\n  // somente depois de apertar 2 vezes ele pega o valor\n  // mas e o valor anterior\n  // setSomaCartas(primeiraCarta+segundaCarta);\n  // setSomaCartasDealer(primeiraCartaDealer+segundaCartaDealer);\n  // }\n\n  const [tem21, setTem21] = useState(false);\n  const somaTem21 = () => {\n    setTem21(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [emJogo && console.log(\"em jogo\"), tem21 && console.log(\"tem o 21\"), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: iniciarPartida,\n      children: \"Iniciar jogo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: finalizar,\n      children: \"Finalizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: somaTem21,\n      children: \"21 instantaneo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: pegarCarta,\n      children: \"Pegar mais uma carta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartasJogador, {\n      primeira: primeiraCarta,\n      segunda: segundaCarta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartasDealer, {\n      primeira: primeiraCartaDealer,\n      segunda: segundaCartaDealer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), resultado !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: resultado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AAbbGxLB5++NK3+xaVdeH81BJG4=\");\n_c = App;\nconst CartasJogador = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Suas cartas: \", props.primeira, \" e \", props.segunda]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sua soma: \", props.primeira + props.segunda]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n_c2 = CartasJogador;\nconst CartasDealer = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cartas do dealer: \", props.primeira, \" e \", props.segunda]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Soma dealer: \", props.primeira + props.segunda]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n_c3 = CartasDealer;\nfunction randomCard() {\n  let random = Math.floor(Math.random() * 13) + 1;\n  if (random > 10) {\n    return 10;\n  } else if (random === 1) {\n    return 11;\n  } else {\n    return random;\n  }\n}\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"CartasJogador\");\n$RefreshReg$(_c3, \"CartasDealer\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","emJogo","setEmJogo","cartas","setCartas","randomCard","cartasDealer","setCartasDealer","resultado","setResultado","iniciarPartida","finalizar","compararSomas","pegarCarta","novaCarta","console","log","novaArray","somaArray","somaArrayDealer","i","length","tem21","setTem21","somaTem21","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","CartasJogador","primeira","primeiraCarta","segunda","segundaCarta","CartasDealer","primeiraCartaDealer","segundaCartaDealer","_c","props","_c2","_c3","random","Math","floor","$RefreshReg$"],"sources":["/home/yori/us/react/vinteum/src/App.js"],"sourcesContent":["//TODO \n// resolver soma\n// colocar as cartas em arrays\n// botao de pegar nova carta\n// botao de finalizar a partida\n// usar emJogo e tem21\n\n// TODO OPTIONAL\n// sistema de apostas\n// dealer pode pegar nova carta\n// cartas representam as letras quando pertinente\n\nimport './App.css';\nimport {useState} from 'react';\nimport {useEffect} from 'react';\n\nfunction App() {\nconst [emJogo,setEmJogo] = useState(false);\n\n// const [primeiraCarta,setPrimeiraCarta] = useState(0);\n// const [segundaCarta,setSegundaCarta] = useState(0);\n// const [somaCartas,setSomaCartas] = useState(0);\nconst [cartas,setCartas] = useState([randomCard(),randomCard()]);\n\n// const [primeiraCartaDealer,setPrimeiraCartaDealer] = useState(0);\n// const [segundaCartaDealer,setSegundaCartaDealer] = useState(0);\n// const [somaCartasDealer,setSomaCartasDealer] = useState(0);\nconst [cartasDealer,setCartasDealer] = useState([randomCard(),randomCard()]);\n\nconst [resultado,setResultado] = useState(\"\");\n\n    // useEffect(() =>{\n    //     console.log(\"soma\",somaCartas);\n    //     console.log(\"dealer\",somaCartasDealer);\n    // },[somaCartas,somaCartasDealer]);\n\n    const iniciarPartida = () =>{\n        // setPrimeiraCarta(randomCard());\n        // setSegundaCarta(randomCard());\n        // console.log(\"cartas:\",cartas)\n        \n        // setPrimeiraCartaDealer(randomCard());\n        // setSegundaCartaDealer(randomCard());\n\n        setEmJogo(true);\n        // somarCartas();\n    }\n\n    const finalizar = () =>{\n        // somarCartas();\n        // console.log(\"finalizar function\",somaCartas,somaCartasDealer)\n        compararSomas();\n    }\n\n\n    const pegarCarta = () =>{\n        let novaCarta = randomCard();\n        console.log(\"novaCarta:\",novaCarta)\n        let novaArray = [...cartas,novaCarta];\n        setCartas(novaArray);\n        console.log(\"novaArray:\",novaArray)\n        compararSomas();\n    }\n\n    const compararSomas = () =>{\n        // As somas ficam = 0\n        let somaArray = 0\n        let somaArrayDealer = 0\n        for(let i=0;i<cartas.length;i++){\n            somaArray += cartas[i];\n        }\n        console.log(\"novo soma array:\",somaArray)\n\n        for(let i=0;i<cartasDealer.length;i++){\n            somaArrayDealer += cartasDealer[i];\n        }\n        console.log(\"novo soma array dealer\",somaArrayDealer)\n        // let soma=primeiraCarta+segundaCarta;\n        // let somaDealer=primeiraCartaDealer+segundaCartaDealer;\n\n        if(somaArray<somaArrayDealer){\n            setResultado(\"Perdeu\")\n        }\n        else{\n            setResultado(\"Ganhou\")\n        }\n        console.log(\"Comparar\")\n    }\n\n    // const somarCartas = () =>{\n        // soma nao recebe valor\n        // somente depois de apertar 2 vezes ele pega o valor\n        // mas e o valor anterior\n        // setSomaCartas(primeiraCarta+segundaCarta);\n        // setSomaCartasDealer(primeiraCartaDealer+segundaCartaDealer);\n    // }\n\nconst [tem21,setTem21] = useState(false);\nconst somaTem21 = () =>{\n    setTem21(true);\n}\n\n  return (\n    <div className=\"App\">\n      {emJogo && console.log(\"em jogo\")}\n      {tem21 && console.log(\"tem o 21\")}\n      <button onClick={iniciarPartida}>Iniciar jogo</button>\n      <button onClick={finalizar}>Finalizar</button>\n      <button onClick={somaTem21}>21 instantaneo</button>\n      <button onClick={pegarCarta}>Pegar mais uma carta</button>\n      <br/>\n      <CartasJogador primeira={primeiraCarta} segunda={segundaCarta}/>\n      <br/>\n      <CartasDealer primeira={primeiraCartaDealer} segunda={segundaCartaDealer} />\n      <br/>\n      {resultado !== \"\" && <p>{resultado}</p>}\n    </div>\n  );\n\n}\n\nconst CartasJogador = (props) => {\n    return(\n        <div>\n        <p>Suas cartas: {props.primeira} e {props.segunda}</p>\n        <p>Sua soma: {props.primeira+props.segunda}</p>\n        </div>\n    );\n};\n\nconst CartasDealer = (props) => {\n    return(\n        <div>\n        <p>Cartas do dealer: {props.primeira} e {props.segunda}</p>\n        <p>Soma dealer: {props.primeira+props.segunda}</p>\n        </div>\n    );\n};\n\nfunction randomCard(){\n    let random = Math.floor(Math.random() * 13) + 1\n    if (random > 10){\n        return 10\n    }\n\n    else if (random === 1){\n        return 11\n    }\n\n    else {\n        return random \n    }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}