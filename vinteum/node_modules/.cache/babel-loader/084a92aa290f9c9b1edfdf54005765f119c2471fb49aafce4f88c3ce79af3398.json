{"ast":null,"code":"var _jsxFileName = \"/home/yori/us/react/vinteum/src/App.js\",\n  _s = $RefreshSig$();\n//TODO \n// resolver soma\n// colocar as cartas em arrays\n// botao de pegar nova carta\n// botao de finalizar a partida\n// usar emJogo e tem21\n\n// TODO OPTIONAL\n// sistema de apostas\n// dealer pode pegar nova carta\n// cartas representam as letras quando pertinente\n\nimport './App.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [emJogo, setEmJogo] = useState(false);\n\n  // const [primeiraCarta,setPrimeiraCarta] = useState(0);\n  // const [segundaCarta,setSegundaCarta] = useState(0);\n  const [somaCartas, setSomaCartas] = useState(0);\n  const [cartas, setCartas] = useState([]);\n\n  // const [primeiraCartaDealer,setPrimeiraCartaDealer] = useState(0);\n  // const [segundaCartaDealer,setSegundaCartaDealer] = useState(0);\n  const [somaCartasDealer, setSomaCartasDealer] = useState(0);\n  const [cartasDealer, setCartasDealer] = useState([]);\n  const [resultado, setResultado] = useState(\"\");\n  useEffect(() => {\n    console.log(\"CHANGED\");\n    console.log(\"Suas cartas hook\", cartas);\n    setCartas(cartas);\n    setCartasDealer(cartasDealer);\n    setSomaCartas();\n    setSomaCartasDealer();\n  }, [cartas, cartasDealer, somaCartas, somaCartasDealer]);\n  const iniciarPartida = () => {\n    setCartas([randomCard(), randomCard()]);\n    setCartasDealer([randomCard(), randomCard()]);\n    let soma = 0;\n    for (let i = 0; i < cartas.length; i++) {\n      soma += cartas[i];\n    }\n    let somadealer = 0;\n    for (let i = 0; i < cartasDealer.length; i++) {\n      somadealer += cartasDealer[i];\n    }\n    setSomaCartas(soma);\n    setSomaCartasDealer(somadealer);\n    // setPrimeiraCarta(randomCard());\n    // setSegundaCarta(randomCard());\n    // console.log(\"cartas:\",cartas)\n\n    // setPrimeiraCartaDealer(randomCard());\n    // setSegundaCartaDealer(randomCard());\n\n    setEmJogo(true);\n    // somarCartas();\n  };\n\n  const finalizar = () => {\n    // somarCartas();\n    // console.log(\"finalizar function\",somaCartas,somaCartasDealer)\n    compararSomas();\n  };\n  const pegarCarta = () => {\n    let novaCarta = randomCard();\n    console.log(\"novaCarta:\", novaCarta);\n    let novaArray = [...cartas, novaCarta];\n    setCartas(novaArray);\n    console.log(\"novaArray:\", novaArray);\n  };\n  const compararSomas = () => {\n    // As somas ficam = 0\n    let somaArray = 0;\n    let somaArrayDealer = 0;\n    for (let i = 0; i < cartas.length; i++) {\n      somaArray += cartas[i];\n    }\n    setCartas(somaArray);\n    console.log(\"novo soma array:\", somaArray);\n    for (let i = 0; i < cartasDealer.length; i++) {\n      somaArrayDealer += cartasDealer[i];\n    }\n    console.log(\"novo soma array dealer\", somaArrayDealer);\n    // let soma=primeiraCarta+segundaCarta;\n    // let somaDealer=primeiraCartaDealer+segundaCartaDealer;\n    setSomaCartas(somaArray);\n    setSomaCartasDealer(somaArrayDealer);\n    if (somaArray < somaArrayDealer) {\n      setResultado(\"Perdeu\");\n    } else {\n      setResultado(\"Ganhou\");\n    }\n    console.log(\"Comparar\");\n  };\n\n  // const somarCartas = () =>{\n  // soma nao recebe valor\n  // somente depois de apertar 2 vezes ele pega o valor\n  // mas e o valor anterior\n  // setSomaCartas(primeiraCarta+segundaCarta);\n  // setSomaCartasDealer(primeiraCartaDealer+segundaCartaDealer);\n  // }\n\n  const [tem21, setTem21] = useState(false);\n  const somaTem21 = () => {\n    setTem21(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [emJogo && console.log(\"em jogo\"), tem21 && console.log(\"tem o 21\"), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: iniciarPartida,\n      children: \"Iniciar jogo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: finalizar,\n      children: \"Finalizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: somaTem21,\n      children: \"21 instantaneo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: pegarCarta,\n      children: \"Pegar mais uma carta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartasJogador, {\n      cartas: cartas,\n      soma: somaCartas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartasDealer, {\n      primeira: cartasDealer[0],\n      segunda: cartasDealer[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), resultado !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: resultado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2d8ii63Az1ZzaVytwzZG+6V9fng=\");\n_c = App;\nconst CartasJogador = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Suas cartas: \", props.cartas[0], \" \", props.cartas[1], \" \", props.cartas[2]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sua soma: \", props.soma]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n};\n_c2 = CartasJogador;\nconst CartasDealer = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cartas do dealer: \", props.primeira, \" e \", props.segunda]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Soma dealer: \", props.primeira + props.segunda]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n};\n_c3 = CartasDealer;\nfunction randomCard() {\n  let random = Math.floor(Math.random() * 13) + 1;\n  if (random > 10) {\n    return 10;\n  } else if (random === 1) {\n    return 11;\n  } else {\n    return random;\n  }\n}\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"CartasJogador\");\n$RefreshReg$(_c3, \"CartasDealer\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","emJogo","setEmJogo","somaCartas","setSomaCartas","cartas","setCartas","somaCartasDealer","setSomaCartasDealer","cartasDealer","setCartasDealer","resultado","setResultado","console","log","iniciarPartida","randomCard","soma","i","length","somadealer","finalizar","compararSomas","pegarCarta","novaCarta","novaArray","somaArray","somaArrayDealer","tem21","setTem21","somaTem21","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","CartasJogador","CartasDealer","primeira","segunda","_c","props","_c2","_c3","random","Math","floor","$RefreshReg$"],"sources":["/home/yori/us/react/vinteum/src/App.js"],"sourcesContent":["//TODO \n// resolver soma\n// colocar as cartas em arrays\n// botao de pegar nova carta\n// botao de finalizar a partida\n// usar emJogo e tem21\n\n// TODO OPTIONAL\n// sistema de apostas\n// dealer pode pegar nova carta\n// cartas representam as letras quando pertinente\n\nimport './App.css';\nimport {useState} from 'react';\nimport {useEffect} from 'react';\n\nfunction App() {\nconst [emJogo,setEmJogo] = useState(false);\n\n// const [primeiraCarta,setPrimeiraCarta] = useState(0);\n// const [segundaCarta,setSegundaCarta] = useState(0);\nconst [somaCartas,setSomaCartas] = useState(0);\nconst [cartas,setCartas] = useState([]);\n\n// const [primeiraCartaDealer,setPrimeiraCartaDealer] = useState(0);\n// const [segundaCartaDealer,setSegundaCartaDealer] = useState(0);\nconst [somaCartasDealer,setSomaCartasDealer] = useState(0);\nconst [cartasDealer,setCartasDealer] = useState([]);\n\nconst [resultado,setResultado] = useState(\"\");\n\n    useEffect(() =>{\n        console.log(\"CHANGED\")\n        console.log(\"Suas cartas hook\",cartas)\n        setCartas(cartas);\n        setCartasDealer(cartasDealer);\n        setSomaCartas()\n        setSomaCartasDealer()\n    },[cartas,cartasDealer,somaCartas,somaCartasDealer]);\n\n    const iniciarPartida = () =>{\n        setCartas([randomCard(),randomCard()])\n        setCartasDealer([randomCard(),randomCard()])\n        let soma = 0\n        for(let i = 0;i<cartas.length;i++){\n            soma += cartas[i];\n        }\n\n        let somadealer = 0\n        for(let i = 0;i<cartasDealer.length;i++){\n            somadealer += cartasDealer[i];\n        }\n        setSomaCartas(soma)\n        setSomaCartasDealer(somadealer)\n        // setPrimeiraCarta(randomCard());\n        // setSegundaCarta(randomCard());\n        // console.log(\"cartas:\",cartas)\n        \n        // setPrimeiraCartaDealer(randomCard());\n        // setSegundaCartaDealer(randomCard());\n\n        setEmJogo(true);\n        // somarCartas();\n    }\n\n    const finalizar = () =>{\n        // somarCartas();\n        // console.log(\"finalizar function\",somaCartas,somaCartasDealer)\n        compararSomas();\n    }\n\n\n    const pegarCarta = () =>{\n        let novaCarta = randomCard();\n        console.log(\"novaCarta:\",novaCarta)\n        let novaArray = [...cartas,novaCarta];\n        setCartas(novaArray);\n        console.log(\"novaArray:\",novaArray)\n    }\n\n    const compararSomas = () =>{\n        // As somas ficam = 0\n        let somaArray = 0\n        let somaArrayDealer = 0\n        for(let i=0;i<cartas.length;i++){\n            somaArray += cartas[i];\n\n        }\n        setCartas(somaArray)\n        console.log(\"novo soma array:\",somaArray)\n\n        for(let i=0;i<cartasDealer.length;i++){\n            somaArrayDealer += cartasDealer[i];\n        }\n        console.log(\"novo soma array dealer\",somaArrayDealer)\n        // let soma=primeiraCarta+segundaCarta;\n        // let somaDealer=primeiraCartaDealer+segundaCartaDealer;\n        setSomaCartas(somaArray);\n        setSomaCartasDealer(somaArrayDealer);\n\n        if(somaArray<somaArrayDealer){\n            setResultado(\"Perdeu\")\n        }\n        else{\n            setResultado(\"Ganhou\")\n        }\n        console.log(\"Comparar\")\n    }\n\n    // const somarCartas = () =>{\n        // soma nao recebe valor\n        // somente depois de apertar 2 vezes ele pega o valor\n        // mas e o valor anterior\n        // setSomaCartas(primeiraCarta+segundaCarta);\n        // setSomaCartasDealer(primeiraCartaDealer+segundaCartaDealer);\n    // }\n\nconst [tem21,setTem21] = useState(false);\nconst somaTem21 = () =>{\n    setTem21(true);\n}\n\n  return (\n    <div className=\"App\">\n      {emJogo && console.log(\"em jogo\")}\n      {tem21 && console.log(\"tem o 21\")}\n      <button onClick={iniciarPartida}>Iniciar jogo</button>\n      <button onClick={finalizar}>Finalizar</button>\n      <button onClick={somaTem21}>21 instantaneo</button>\n      <button onClick={pegarCarta}>Pegar mais uma carta</button>\n      <br/>\n      <CartasJogador cartas={cartas} soma={somaCartas}/>\n      <br/>\n      <CartasDealer primeira={cartasDealer[0]} segunda={cartasDealer[1]} />\n      <br/>\n      {resultado !== \"\" && <p>{resultado}</p>}\n    </div>\n  );\n\n}\n\nconst CartasJogador = (props) => {\n    return(\n        <div>\n        <p>Suas cartas: {props.cartas[0]} {props.cartas[1]} {props.cartas[2]}</p>\n        <p>Sua soma: {props.soma}</p>\n        </div>\n    );\n};\n\nconst CartasDealer = (props) => {\n    return(\n        <div>\n        <p>Cartas do dealer: {props.primeira} e {props.segunda}</p>\n        <p>Soma dealer: {props.primeira+props.segunda}</p>\n        </div>\n    );\n};\n\nfunction randomCard(){\n    let random = Math.floor(Math.random() * 13) + 1\n    if (random > 10){\n        return 10\n    }\n\n    else if (random === 1){\n        return 11\n    }\n\n    else {\n        return random \n    }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}