{"ast":null,"code":"var _jsxFileName = \"/home/yori/us/react/todo/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todoList, setTodoList] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const handleChange = event => {\n    setNewTask(event.target.value);\n  };\n\n  // In order to add new values to the todoList array, we need to create another array\n  // which receives all the values from the todoList + the new value we want to add\n  // this new array is indicated with the [] surrounding both variables\n  // the spread operator (...) is used to copy all the values from an array\n  const addTask = () => {\n    setTodoList([...todoList, newTask]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: todoList.map(task => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \" X \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oHvYSOnzf7TdhowWf8ajOb8P9xI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","todoList","setTodoList","newTask","setNewTask","handleChange","event","target","value","addTask","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","task","_c","$RefreshReg$"],"sources":["/home/yori/us/react/todo/src/App.js"],"sourcesContent":["import './App.css';\nimport {useState} from 'react';\n\nfunction App() {\n    const [todoList,setTodoList] = useState([]);\n    const [newTask,setNewTask] = useState(\"\");\n\n    const handleChange = (event) =>{\n        setNewTask(event.target.value);\n    }\n\n    // In order to add new values to the todoList array, we need to create another array\n    // which receives all the values from the todoList + the new value we want to add\n    // this new array is indicated with the [] surrounding both variables\n    // the spread operator (...) is used to copy all the values from an array\n    const addTask = () =>{\n        setTodoList([...todoList,newTask]);\n    }\n  return (\n    <div className=\"App\">\n\n      <div className=\"addTask\">\n      <input onChange={handleChange}/>\n      <button onClick={addTask}>Add Task</button>\n      </div>\n\n      <div className=\"list\">\n      {/*Uses the map method to show everything inside the array, passing the task value as a parameter and displaying it*/}\n      {todoList.map((task) => {\n          return <div>\n                    <h1>{task}</h1>\n                    <button> X </button>\n                 </div>\n      })}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAAQA,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACO,OAAO,EAACC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEzC,MAAMS,YAAY,GAAIC,KAAK,IAAI;IAC3BF,UAAU,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;;EAED;EACA;EACA;EACA;EACA,MAAMC,OAAO,GAAGA,CAAA,KAAK;IACjBP,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAACE,OAAO,CAAC,CAAC;EACtC,CAAC;EACH,oBACEL,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElBb,OAAA;MAAKY,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACxBb,OAAA;QAAOc,QAAQ,EAAEP;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAChClB,OAAA;QAAQmB,OAAO,EAAER,OAAQ;QAAAE,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eAENlB,OAAA;MAAKY,SAAS,EAAC,MAAM;MAAAC,QAAA,EAEpBV,QAAQ,CAACiB,GAAG,CAAEC,IAAI,IAAK;QACpB,oBAAOrB,OAAA;UAAAa,QAAA,gBACGb,OAAA;YAAAa,QAAA,EAAKQ;UAAI;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACflB,OAAA;YAAAa,QAAA,EAAQ;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC;MACjB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV;AAAChB,EAAA,CAnCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}